version: "3"

networks:
  loki:

services:

  # Aplicacion test
  aplicacion-test:
    image: aplicacion-test
    volumes:
      - ./logs/aplicacion-test.log:/tmp/aplicacion-test.log
      - ./logs/access_log.log:/tmp/access_log.log
    environment:
      # Configuracion del trace automatico usando el agente de java
      JAVA_TOOL_OPTIONS: -javaagent:./opentelemetry-javaagent.jar    
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://tempo:4317
      OTEL_SERVICE_NAME: aplicacion-test
      OTEL_TRACES_EXPORTER: otlp
    ports:
      - "8080:8080"
    networks:
      - loki

  # Encargado de ejecutar la shellscript para simular trafico
  simulador-carga:
    image: curlimages/curl:latest
    volumes:
      - ../aplicacion-test/simulador-carga.sh:/tmp/simulador-carga.sh
    command: /bin/sh -c "/tmp/simulador-carga.sh"
    networks:
      - loki
  
  loki:
    image: grafana/loki:latest
    volumes:
      - ./config/loki-local.yaml:/etc/loki/local-config.yaml
    entrypoint:
      - /usr/bin/loki
      - -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - loki
     
  tempo:
    image: grafana/tempo:1.5.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/tempo-local.yaml:/etc/tempo.yaml
      - ./config/tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    networks:
      - loki

  prometheus:
    image: prom/prometheus:latest
    command: [
      "--config.file=/etc/prometheus.yaml", 
      "--enable-feature=exemplar-storage",
      "--storage.tsdb.path=/prometheus",
      "--web.console.libraries=/usr/share/prometheus/console_libraries",
      "--web.console.templates=/usr/share/prometheus/consoles",
      "--web.enable-remote-write-receiver"
    ]
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - loki

  grafana:
    image: grafana/grafana:9.1.0
    volumes:
      # grafana.ini
      # see: https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/#default-paths
      - ./config/grafana.ini:/etc/grafana/grafana.ini
      # Pre-load los data sources
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      # Pre-load algunos dashboard de ejemplo
      - ./dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_USERS_DEFAULT_THEME=light
      - GF_FEATURE_TOGGLES_ENABLE=tempoSearch,tempoServiceGraph,tempoApmTable
    ports:
      - "3000:3000"
    networks:
      - loki

  agent:
    image: grafana/agent:v0.25.1
    volumes:
      # Configuracion del agente
      - ./config/agent.yaml:/etc/agent-config/agent.yaml
      # Archivos de logs
      - ./logs/aplicacion-test.log:/tmp/aplicacion-test.log
      - ./logs/access_log.log:/tmp/access_log.log
      - /tmp/agent:/etc/agent
    entrypoint:
      - /bin/agent
      - -config.file=/etc/agent-config/agent.yaml
      - -metrics.wal-directory=/tmp/agent/wal
      - -enable-features=integrations-next
      - -config.expand-env
      - -config.enable-read-api
    environment:
      HOSTNAME: agent
      LOKI_HOST: loki:3100
      TEMPO_HOST: tempo:3200
    ports:
      - "12345:12345"
    depends_on:
      - loki
      - tempo
    networks:
      - loki
